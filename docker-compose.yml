version: "3.0"
services:
  postgres:
    image: postgres:14-alpine
    container_name: postgres
    restart: always
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_PASSWORD=19pool90
      - POSTGRES_USER=postgres
    volumes:
      - /root/Desktop/postgs:/var/lib/postgresql/data
#
  mongodb:
    image: mongo:6-jammy
    container_name: mongodb
    restart: always
    ports:
      - "27017:27017"
    volumes:
      - /root/Desktop/mongodb:/data/db

  mysql-db:
    image: mysql:latest
    container_name: mysql-db
    restart: always
    environment:
      - MYSQL_ROOT_PASSWORD=pool
      - MYSQL_DATABASE=orders-db
      - MYSQL_USER=root
      - MYSQL_PASSWORD=pool
    ports:
      - "3306:3306"
    volumes:
      - /root/Desktop/mydb:/var/lib/mysql
  zookeeper:
    image: wurstmeister/zookeeper
    container_name: zookeeper
    ports:
      - '2181:2181'
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
  broker:
    image: wurstmeister/kafka
    container_name: broker
    ports:
      - '9092:9092'
    depends_on:
      - zookeeper
    environment:
      - KAFKA_BROKER_ID=1
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181
      - KAFKA_LISTENERS=PLAINTEXT://:9092
      - KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://broker:9092
      - ALLOW_PLAINTEXT_LISTENER=yes
  discovery-service:
    image: discovery-service
    container_name: discovery-server
    pull_policy: always
    ports:
      - '8761:8761'
    restart: always
  gateway:
    image: gateway-service
    container_name: gateway
    pull_policy: always
    ports:
      - "8085:8085"
    depends_on:
      - discovery-service
    environment:
      - eureka.client.service-url.defaultZone=http://discovery-service:8761/eureka
  order-service:
    image: order-service
    container_name: order-service
    pull_policy: always
    ports:
      - "8084:8084"
    depends_on:
      - discovery-service
      - mysql-db
    environment:
      - spring.datasource.url=jdbc:mysql://mysql-db:3306/orders-db?createDatabaseIfNotExist=true
      - eureka.client.service-url.defaultZone=http://discovery-service:8761/eureka
  product-service:
    image: product-service
    container_name: product-service
    pull_policy: always
    ports:
      - "8082:8082"
    depends_on:
      - discovery-service
      - postgres
    environment:
      - spring.datasource.url=jdbc:postgresql://postgres:5432/postgres
      - eureka.client.service-url.defaultZone=http://discovery-service:8761/eureka

  office-service:
    image: office-service
    container_name: office-service
    pull_policy: always
    ports:
      - "8081:8081"
    depends_on:
      - discovery-service
      - mongodb
    environment:
      - MONGODB_URL=mongodb://mongodb:27017/office
      - eureka.client.service-url.defaultZone=http://discovery-service:8761/eureka

  jwt-service:
    image: jwt-service
    container_name: jwt-service
    pull_policy: always
    ports:
      - "8091:8091"
    depends_on:
      - discovery-service
    environment:
      - eureka.client.service-url.defaultZone=http://discovery-service:8761/eureka

  prometheus:
    image: prom/prometheus:v2.37.1
    container_name: prometheus
    restart: always
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
    depends_on:
      - product-service
      - order-service
      - office-service
      - jwt-service

  grafana:
    image: grafana/grafana-oss:8.5.2
    container_name: grafana
    restart: always
    ports:
      - "3000:3000"
    links:
      - prometheus:prometheus
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=password
